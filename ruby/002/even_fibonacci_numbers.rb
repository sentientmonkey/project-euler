#!/usr/bin/env ruby -w

#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

#  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms

def even_fib_sum(max)
  prev = 1
  curr = 2
  sum = 0
  while curr < max do
    sum += curr if curr % 2 == 0
    curr, prev = (prev + curr), curr
  end
  sum
end

require 'minitest/autorun'
require 'minitest/pride'
require_relative 'in_one_minute'

describe "Even fibonacci sum" do
  include InOneMinute

  it "should sum up to 44 for 10 terms" do
    even_fib_sum(90).must_equal 44
  end
  it "should sum up to X for values less than 4 million" do
    even_fib_sum(4_000_000).must_equal 4613732
  end
  it "should sum up to X for values less than 4 million within a minute" do
    in_one_minute { even_fib_sum(4_000_000) }
  end
end
